// issuedDeviceRequestMapper.js - Request mapper for Issued Device Administration API

const logger = require("../../common/logger/logger.js");
const customerInfoConstants = require("../helper/customerInfoConstants.js");

const APP_CAT_ID = process.env.APP_CAT_ID;
const LOG_PREFIX = "issuedDeviceRequestMapper.js - ";

module.exports = {
    /**
     * Builds the request object for making the call to Issued Device Administration API.
     * @param {string} ecifId
     * @param {string} correlationId
     * @returns {object} request payload
     */
    getIssuedDeviceRequest: (ecifId, correlationId) => {
        logger.trace("In getIssuedDeviceRequest.....", correlationId);

        const requestPayload = {
            ecifID: ecifId,
            expandList: customerInfoConstants.IDA_EXPAND_LIST || "all",
            scope: customerInfoConstants.IDA_SCOPE || "default",
            businessCategory: [
                customerInfoConstants.IDA_BUSINESS_CATEGORY || "WEALTH"
            ],
            originatorData: {
                applicationCatalogueID: customerInfoConstants.APP_CAT_ID,
                country: customerInfoConstants.COUNTRY_CANADA,
                locationID: "192.168.0.0", // Static as per existing pattern
                locationType: "IP",
                channel: "web", 
                employeeUserID: "customerInfoService", // Service identifier
                employeeUserName: "customerInfoService",
                transitNumber: "000" // Default value
            }
        };

        logger.debugWithSanitize(
            requestPayload,
            LOG_PREFIX.concat("getIssuedDeviceRequest.requestPayload"),
            correlationId
        );

        logger.trace("Out getIssuedDeviceRequest.....", correlationId);
        return requestPayload;
    }
};
