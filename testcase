import { jest, describe, it, expect, beforeEach } from '@jest/globals';
import { CreditcardUtilityService } from '../../src/services/creditcardUtilityService';
import { CrossAccountAPICache } from '../../../common/cross-account/cached-apiinformation';
import { ServerError } from '../../util/serverError';
import { ErrorCodes } from '../../util/errorCodes';

// Mock lodash
jest.mock('lodash', () => ({
    cloneDeepWith: jest.fn(),
    isObject: jest.fn(),
    toLower: jest.fn(),
    some: jest.fn()
}));

// Mock uuid
jest.mock('uuid', () => ({
    v4: jest.fn()
}));

// Mock logger
jest.mock('../../../common/utils/logger', () => ({
    error: jest.fn(),
    trace: jest.fn(),
    info: jest.fn(),
    logBackendServiceRequest: jest.fn(),
    logBackendServiceResponse: jest.fn(),
    logBackendServiceError: jest.fn()
}));



/** @type {import('ts-jest').JestConfigWithTsJest} */
export default {
  preset: "ts-jest",
  testEnvironment: "node",
  // Ignore resource files
  testPathIgnorePatterns: [
    "/node_modules/",
    "/test/resources/"
  ],
  // Specify where test files are located
  testMatch: [
    "**/__tests__/**/*.test.ts",
    "**/?(*.)+(spec|test).ts"
  ],
  extensionsToTreatAsEsm: ['.ts'],
  transform: {
    "^.+\\.tsx?$": [
      "ts-jest",
      {
        useESM: true,
        isolatedModules: true,
      },
    ],
  },
};


import { Bin } from "///src/model/ccu/binRangesResponse";
import { CreditcardUtilityService } from "///src/service/ccu/creditcardUtilityService";

import { Bin } from "///src/model/ccu/binRangesResponse";
import { CreditcardUtilityService } from "///src/service/ccu/creditcardUtilityService";
import fetch from 'node-fetch';

package com.bmo.bos.openapi.account;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bmo.bos.openapi.common.SignedOutResPL;
import com.bmo.bos.openapi.creditscore.reqres.payload.GetLastDownloadDateErrorResPL;
import com.bmo.bos.openapi.common.controller.BaseController;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;

@RestController
@RequestMapping("/onlinebanking/services/accountdetails")
public class AccountDownloadController extends BaseController {

    @Operation(
        description = "Get Last Download Date service",
        summary = "Get Last Download Date",
        tags = "getLastDownloadDate",
        responses = {
            @ApiResponse(
                responseCode = "200",
                description = "Successful Operation",
                content = @Content(mediaType = "application/json", schema = @Schema(implementation = GetLastDownloadDateResponseDTO.class))
            ),
            @ApiResponse(
                responseCode = "400",
                description = "Error and Exceptions.",
                content = @Content(mediaType = "application/json", schema = @Schema(implementation = GetLastDownloadDateErrorResponseDTO.class))
            ),
            @ApiResponse(
                responseCode = "401",
                description = "Signed Out.",
                content = @Content(mediaType = "application/json", schema = @Schema(implementation = SignedOutResPL.class))
            )
        }
    )
    @PostMapping("/lastDownloadDate")
    public GetLastDownloadDateResponseDTO getLastDownloadDate(@RequestBody GetLastDownloadDateRequestDTO getLastDownloadDateRequestDTO) {
        return new GetLastDownloadDateResponseDTO();
    }
}



package com.bmo.bos.openapi.creditscore.reqres.payload;

import com.bmo.bos.openapi.common.ErrorRes;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetLastDownloadDateErrorResPL {
    @JsonProperty(value = "GetLastDownloadDateRs")
    ErrorRes payload = new ErrorRes();

    public ErrorRes getPayload() {
        return payload;
    }

    public void setPayload(ErrorRes payload) {
        this.payload = payload;
    }
}







{
  "paths": {
    "/onlinebanking/services/accountdetails/lastDownloadDate": {
      "post": {
        "tags": ["Account Download Service"],
        "summary": "Get Last Download Date",
        "description": "Get the last download date for the specified account",
        "operationId": "getLastDownloadDate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetLastDownloadDateReqPL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLastDownloadDateResPL"
                }
              }
            }
          },
          "400": {
            "description": "Error and Exceptions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLastDownloadDateErrorResPL"
                }
              }
            }
          },
          "401": {
            "description": "Signed Out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignedOutResPL"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GetLastDownloadDateReq": {
        "type": "object",
        "properties": {
          "HdrRq": {
            "$ref": "#/components/schemas/RequestHeader"
          },
          "BodyRq": {
            "$ref": "#/components/schemas/GetLastDownloadDateRequestDTO"
          }
        }
      },
      "GetLastDownloadDateReqPL": {
        "type": "object",
        "properties": {
          "GetLastDownloadDateRq": {
            "$ref": "#/components/schemas/GetLastDownloadDateReq"
          }
        }
      },
      "GetLastDownloadDateRes": {
        "type": "object",
        "properties": {
          "HdrRs": {
            "$ref": "#/components/schemas/ResponseHeader"
          },
          "BodyRs": {
            "$ref": "#/components/schemas/GetLastDownloadDateResponseDTO"
          }
        }
      },
      "GetLastDownloadDateResPL": {
        "type": "object",
        "properties": {
          "GetLastDownloadDateRs": {
            "$ref": "#/components/schemas/GetLastDownloadDateRes"
          }
        }
      },
      "GetLastDownloadDateRequestDTO": {
        "type": "object",
        "properties": {
          "accountIndex": {
            "type": "string",
            "description": "Account index"
          }
        }
      },
      "GetLastDownloadDateResponseDTO": {
        "type": "object",
        "properties": {
          "lastDownloadDate": {
            "type": "string",
            "format": "date-time",
            "description": "Last download date for the account"
          }
        }
      }
    }
  }
}


package com.bmo.bos.openapi.accountdetails.reqres;

public class GetLastDownloadDateRes {
    private GetLastDownloadDateResponseDTO BodyRs;

    public GetLastDownloadDateResponseDTO getBodyRs() {
        return BodyRs;
    }

    public void setBodyRs(GetLastDownloadDateResponseDTO bodyRs) {
        this.BodyRs = bodyRs;
    }
}

package com.bmo.bos.openapi.accountdetails.reqres.payload;

import com.bmo.bos.openapi.accountdetails.reqres.GetLastDownloadDateRes;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetLastDownloadDateResPL {
    @JsonProperty(value = "GetLastDownloadDateRs")
    GetLastDownloadDateRes payload = new GetLastDownloadDateRes();

    public GetLastDownloadDateRes getPayload() {
        return payload;
    }

    public void setPayload(GetLastDownloadDateRes payload) {
        this.payload = payload;
    }
}



package com.bmo.bos.openapi.accountdetails.reqres;

public class GetLastDownloadDateReq {
    private GetLastDownloadDateRequestDTO BodyRq;

    public GetLastDownloadDateRequestDTO getBodyRq() {
        return BodyRq;
    }

    public void setBodyRq(GetLastDownloadDateRequestDTO bodyRq) {
        this.BodyRq = bodyRq;
    }
}

package com.bmo.bos.openapi.accountdetails.reqres.payload;

import com.bmo.bos.openapi.accountdetails.reqres.GetLastDownloadDateReq;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetLastDownloadDateReqPL {
    @JsonProperty(value = "GetLastDownloadDateRq")
    GetLastDownloadDateReq payload = new GetLastDownloadDateReq();

    public GetLastDownloadDateReq getPayload() {
        return payload;
    }

    public void setPayload(GetLastDownloadDateReq payload) {
        this.payload = payload;
    }
}



    @Operation(
        description = "Get Last Download Date service",
        summary = "Get Last Download Date",
        tags = "getLastDownloadDate",
        responses = {
            @ApiResponse(
                responseCode = "200",
                description = "Successful Operation",
                content = @Content(mediaType = "application/json", schema = @Schema(implementation = GetLastDownloadDateResPL.class))
            ),
            @ApiResponse(
                responseCode = "400",
                description = "Error and Exceptions.",
                content = @Content(mediaType = "application/json", schema = @Schema(implementation = GetLastDownloadDateErrorResPL.class))
            ),
            @ApiResponse(
                responseCode = "401",
                description = "Signed Out.",
                content = @Content(mediaType = "application/json", schema = @Schema(implementation = SignedOutResPL.class))
            )
        }
    )
    @PostMapping("/lastDownloadDate")
    public GetLastDownloadDateResPL getLastDownloadDate(@RequestBody GetLastDownloadDateReqPL reqPL) {
        return new GetLastDownloadDateResPL();
    }
