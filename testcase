public void calculateCommission(Policy policy, Map<String, Object> htPolicy) {
    try {
        List<Location> locList = policy.getLocationList();
        Map<Double, Double> comMap = new HashMap<>();
        
        // Process each location
        for (Location loc : locList) {
            Map<String, LocationValue> locVal = loc.getLocationValues();
            
            // Process each location value
            for (Map.Entry<String, LocationValue> entry : locVal.entrySet()) {
                LocationValue locValue = entry.getValue();
                double locValComm = 0.0;
                double locValPrem = 0.0;
                
                try {
                    if (locValue != null && locValue.getLocCommision() != null && 
                        !locValue.getLocCommision().trim().isEmpty()) {
                        locValComm = Double.parseDouble(locValue.getLocCommision().trim());
                    }
                } catch (NumberFormatException e) {
                    log.error("Invalid location commission value: " + locValue.getLocCommision());
                }
                
                try {
                    if (locValue != null && locValue.getLocPremium() != null && 
                        !locValue.getLocPremium().trim().isEmpty()) {
                        locValPrem = Double.parseDouble(locValue.getLocPremium().trim());
                    }
                } catch (NumberFormatException e) {
                    log.error("Invalid location premium value: " + locValue.getLocPremium());
                }
                
                // Aggregate premiums by commission rate without using lambda
                Double currentValue = comMap.get(locValComm);
                if (currentValue == null) {
                    comMap.put(locValComm, locValPrem);
                } else {
                    comMap.put(locValComm, currentValue + locValPrem);
                }
            }
        }
        
        // Populate the result map
        int i = 0;
        for (Map.Entry<Double, Double> entry : comMap.entrySet()) {
            htPolicy.put("feerate" + i, entry.getKey());
            htPolicy.put("premium" + i, entry.getValue());
            i++;
        }
    } catch (Exception e) {
        log.error("ERROR: IICESSGI Util: calculateCommission", e);
    }
}
